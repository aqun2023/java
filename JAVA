import javax.crypto.Cipher;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;
import java.util.Base64;

public class AESCBCDecrypt {
    public static void main(String[] args) {
        try {
            // 密钥和IV
            String key = "ABCDEF1234567890"; // 长度必须为16, 24或32个字节
            String initVector = "1234567890ABCDEF"; // CBC模式需要IV，长度为16个字节

            // 加密数据（Base64编码的字符串）
            String encryptedData = "VzZwS1ljMkt4RG8xRGlQNWxMRm5ubXVRbThXYnM5eUlyL28yZndITng3Q3BzazJucWVjbjBEU2pCT0M3YkZQMA==";

            // 解密
            byte[] decrypted = decrypt(encryptedData, key, initVector);
            System.out.println("解密结果: " + new String(decrypted));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public static byte[] decrypt(String encryptedData, String key, String initVector) throws Exception {
        // 创建AES密钥
        SecretKeySpec secretKey = new SecretKeySpec(key.getBytes(), "AES");
        IvParameterSpec ivParams = new IvParameterSpec(initVector.getBytes());

        // 初始化Cipher
        Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
        cipher.init(Cipher.DECRYPT_MODE, secretKey, ivParams);

        // 解密
        byte[] original = cipher.doFinal(Base64.getDecoder().decode(encryptedData));
        return original;
    }
}
